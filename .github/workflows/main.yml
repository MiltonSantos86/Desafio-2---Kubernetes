name: CI-CD # Nome do pipeline - Arquivo único com CI e com CD

on: #Evento workflow que vai ser disparado
  push: #Primeiro evento
    branches: ["main"]
  workflow_dispatch: #Permite executar pipeline de forma manual
jobs:  #Quais as sequencias de etapas do workflow - Foram criados os dois jobs no mesmo arquivo.
  ci:
    runs-on: ubuntu-latest  #Qual ambiente será disparado - Pode ser outras distribuições
    steps: #Passos de execução
      - name: Obter o código do projeto #Autenticar no docker hub
        uses: actions/checkout@v4

      - name: Autenticar no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construção e envio da Imagem Docker
        uses: docker/build-push-action@v6
        with:
          context: ./src
          push: true
          file: ./src/Dockerfile
          tags: |
            miltonsantos86/fake-shop:latest
            miltonsantos86/fake-shop:v${{ github.run_number }}

  cd:
    runs-on: ubuntu-latest
    needs: [ci] # Configura o Workflow para informar que o job de CD depente da conclusão do job de CI
    permissions:
      id-token: write
      contents: read
      actions: read    
    steps:
      - name: Obter o código do projeto
        uses: actions/checkout@v4
       
      - name: autenticar na AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Configurar o kubectl
        run: aws eks update-kubeconfig --name eks-aula-devopscloud

      - name: Deploy dos manifestos no Kubernetes
        uses: Azure/k8s-deploy@v5
        with:
           manifests: |
            ./k8s/deployment.yaml
           images: |
              miltonsantos86/fake-shop:v${{ github.run_number }}
